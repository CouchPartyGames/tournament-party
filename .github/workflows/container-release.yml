name: Build and Publish Image

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
    branches-ignore:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: couchpartygames/tournament-backend

jobs:

  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Write release version
        shell: bash
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo Version: $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.0.5

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: docker_meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          
          labels: |
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.source=https://github.com/couchpartygames/tournament-party
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build image and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v4
        id: build-and-push
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          file: src/TournamentBackend/Dockerfile
          #platforms: linux/amd64,linux/arm64
          tags: ${VERSION}
          labels: ${{ steps.docker_meta.outputs.tags }}
          push: true

      - name: Sign image with a key
        run: |
          cosign sign --yes --key env://COSIGN_PRIVATE_KEY \
            -a "repo=${{ github.repository }}" \
            -a "workflow=${{ github.workflow }}" \
            -a "ref=${{ github.sha }}" \
            "${TAGS}@${DIGEST}"
        env:
          TAGS: ${{ steps.docker_meta.outputs.tags }}
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
          TAGS: ${{ steps.docker_meta.outputs.tags }}
        run: cosign sign --yes "${TAGS}@${DIGEST}"

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
